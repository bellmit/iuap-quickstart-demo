<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd


		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd


		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd"
       default-lazy-init="true">

    <description>Spring公共配置</description>

    <!-- <context:property-placeholder -->
    <!-- ignore-unresolvable="true" -->
    <!-- location="classpath:/iuap-eiap-bpm-msgcfg-application.properties" /> -->


    <!-- 将多个配置文件读取到容器中，交给Spring管理 -->
    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:/iuap-eiap-bpm-msgcfg-application.properties</value>
                <value>classpath:/iuap-Bpm-MQConfig.properties</value>
            </list>
        </property>
    </bean>


    <!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
    <context:component-scan base-package="com.yonyou.iuap">
        <context:exclude-filter type="annotation"
                                expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!-- spring 事务 -->
    <!-- 	<aop:aspectj-autoproxy /> -->
    <tx:annotation-driven transaction-manager="transactionManager"/>
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="jdbcDataSource"/>
    </bean>

    <!-- 数据源配置, 使用Tomcat JDBC连接池 -->
    <bean id="jdbcDataSource" class="org.apache.tomcat.jdbc.pool.DataSource"
          destroy-method="close">
        <!-- Connection Info -->
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>

        <!-- Connection Pooling Info -->
        <!-- 连接池的最大数据库连接数。设为0表示无限制。 -->
        <property name="maxActive" value="${jdbc.pool.maxActive}"/>
        <!-- 初始化连接数量 -->
        <property name="initialSize" value="${jdbc.pool.initialSize}"/>
        <!-- 最大建立连接等待时间。如果超过此时间将接到异常。设为-1表示无限制。单位毫秒 -->
        <property name="maxWait" value="${jdbc.pool.maxWait}"/>
        <!-- 最大等待连接中的数量,设 0 为没有限制 -->
        <property name="maxIdle" value="${jdbc.pool.maxIdle}"/>
        <!-- 最小等待连接中的数量,设 0 为没有限制 -->
        <property name="minIdle" value="${jdbc.pool.minIdle}"/>
        <!-- 连接被泄露时是否打印 -->
        <property name="logAbandoned" value="${jdbc.pool.logAbandoned}"/>
        <!--强制自我中断避免dbcp自身bug出现连接过久资源耗尽,是否自动回收超时连接 -->
        <property name="removeAbandoned" value="${jdbc.pool.removeAbandoned}"/>
        <!--自我中断时间秒 -->
        <property name="removeAbandonedTimeout" value="${jdbc.pool.removeAbandonedTimeout}"/>
        <property name="defaultAutoCommit" value="${jdbc.pool.defaultAutoCommit}"/>
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="jdbcDataSource"></property>
    </bean>


    <!-- 	<bean class="com.yonyou.iuap.bpm.common.msgcfg.SpringContextUtil"></bean> -->

    <!-- MyBatis配置 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="jdbcDataSource"/>
        <!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 -->
        <property name="typeAliasesPackage"
                  value="com.yonyou.iuap.entity,com.yonyou.iuap.bpm.entity"/>
        <!-- 显式指定Mapper文件位置 -->
        <property name="mapperLocations">
            <list>
                <value>classpath*:/mybatis/**/*Mapper.xml</value>
            </list>
        </property>
        <property name="plugins">
            <array>
                <bean id="paginationInterceptor"
                      class="com.yonyou.iuap.mybatis.plugins.PaginationInterceptor">
                    <property name="properties">
                        <props>
                            <prop key="dbms">${jdbc.page.type}</prop>
                            <!-- 分页查询方法中必须含有一下字符 -->
                            <prop key="sqlRegex">.*retrievePage.*</prop>
                        </props>
                    </property>
                </bean>
            </array>
        </property>
    </bean>


    <!-- 扫描basePackage下所有以@MyBatisRepository标识的 接口 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage"
                  value="com.yonyou.iuap.repository,com.yonyou.iuap.bpm.dao"/>
        <property name="annotationClass"
                  value="com.yonyou.iuap.persistence.mybatis.anotation.MyBatisRepository"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

</beans>